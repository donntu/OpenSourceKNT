#include <iostream.h>
#include <iomanip.h>
#include <conio.h>
#include <stdio.h>
int dc[]={31,28,31,30,31,30,31,31,30,31,30,31};
#define DC(m,y) (dc[m-1]+(m==2 && (y%4==0 && y%100!=0 || y%400==0)))
class CDateAddDays
{
	int m_year,m_month,m_day;
public:
	CDateAddDays(){m_year=m_month=m_day=0;}
	CDateAddDays(CDateAddDays &date)
	{
		m_year=date.m_year;
		m_month=date.m_month;
		m_day=date.m_day;
	}
	~CDateAddDays(){}
	void AddDays(int n)
	{
		for (;n;n--) if (++m_day>DC(m_month,m_year))
		{
			m_day=1;
			if (++m_month>12)
			{
				m_month=1;
				m_year++;
			}
		}
	}
	int SetDateString(char *date)
	{
		int d,m,y;
		sscanf(date,"%d.%d.%d",&d,&m,&y);
		if (y>0)
		{
			m_year=y;
			if (m>0 && m<=12)
			{
				m_month=m;
				if (d>0 && d<=DC(m,y))
				{
					m_day=d;
					return 1;
				}
			}
		}
		return 0;
	}
	void GetDateString(){cout<<setw(2)<<setfill('0')<<m_day<<"."<<setw(2)<<m_month<<"."<<setw(4)<<m_year<<endl;}
	CDateAddDays operator + (int n)
	{
		CDateAddDays r=*this;
		r.AddDays(n);
		return r;
	}
	CDateAddDays friend operator ++(CDateAddDays&);
	CDateAddDays friend operator ++(CDateAddDays&,int);
};
CDateAddDays operator ++(CDateAddDays& date)
{
	date.AddDays(7);
	return date;
}
CDateAddDays operator ++(CDateAddDays& date,int i)
{
	CDateAddDays r=date;
	date.AddDays(7);
	return r;
}
int main()
{
	char *date=new char[11];
	int n;
	CDateAddDays date1,date2;
	do
	{
		cout<<"Enter date in [dd.mm.yyyy]:"<<endl;
		cin>>date;
	} while (!date1.SetDateString(date));
	do
	{
		cout<<"Enter number of days:"<<endl;
		cin>>n;
	} while (n<0);
	date2=date1+n;
	cout<<"After "<<n<<" days: ";
	date2.GetDateString();
	cout<<"++date: ";
	(++date2).GetDateString();
	cout<<"date++: ";
	(date2++).GetDateString();
	cout<<"date: ";
	date2.GetDateString();
	getch();
	return 0;
}
